name: Build, Lint and Test packages

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: pnpm/action-setup@v4.0.0
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: pnpm i
      - name: Build
        run: pnpm build
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Cache node_modules and dist
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.pnpm-store
            ~/.cache
            node_modules
            docs/node_modules
            apps/**/node_modules
            packages/**/node_modules
            packages/**/dist
            references/packages/**/node_modules
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: pnpm/action-setup@v4.0.0
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore cached node_modules and dist
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.pnpm-store
            ~/.cache
            node_modules
            docs/node_modules
            apps/**/node_modules
            packages/**/node_modules
            packages/**/dist
            references/packages/**/node_modules
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Lint code
        run: pnpm lint
      - name: Check types
        run: pnpm typecheck

  test:
    name: Test
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
        react-version: [18]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: pnpm/action-setup@v4.0.0
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore cached node_modules and dist
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.pnpm-store
            ~/.cache
            node_modules
            docs/node_modules
            apps/**/node_modules
            packages/**/node_modules
            packages/**/dist
            references/packages/**/node_modules
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}

      - name: Fork Tenderly virtual testnet
        run: pnpm vnet:fork:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}

      - name: Test packages
        run: pnpm test:coverage:ci
        env:
          REACT_VERSION: ${{ matrix.react-version }}

      - name: Delete Tenderly virtual testnet fork
        run: pnpm vnet:delete:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}
        if: always()