// TODO make it so icons and be passed size prop

export const ShiftArrow = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <path
      d="M0.648362 4.35236L5.00072 0L9.35307 4.35236C9.7436 4.74288 9.7436 5.37604 9.35307 5.76657C8.96255 6.15709 8.32938 6.15709 7.93886 5.76657L6.00072 3.28196L6.00072 14C6.00072 14.5523 5.553 15 5.00072 15C4.44843 15 4.00072 14.5523 4.00072 14L4.00072 3.28196L2.06258 5.76657C1.67205 6.15709 1.03889 6.15709 0.648362 5.76657C0.257838 5.37604 0.257838 4.74288 0.648362 4.35236Z"
      fill="currentColor"
    />
    <path
      d="M16.0005 2V12.7167L17.9242 10.2478C18.3148 9.8573 18.9479 9.8573 19.3385 10.2478C19.729 10.6383 19.729 11.2715 19.3385 11.662L15.0005 16L10.6625 11.662C10.272 11.2715 10.272 10.6383 10.6625 10.2478C11.053 9.8573 11.6862 9.8573 12.0767 10.2478L14.0005 12.7167L14.0005 2C14.0005 1.44771 14.4482 1 15.0005 1C15.5528 1 16.0005 1.44771 16.0005 2Z"
      fill="currentColor"
    />
  </svg>
);

export const Settings = (props: React.SVGProps<SVGSVGElement>) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <path
      d="M10.001 12C11.1055 12 12.001 11.1046 12.001 10C12.001 8.89543 11.1055 8 10.001 8C8.89641 8 8.00098 8.89543 8.00098 10C8.00098 11.1046 8.89641 12 10.001 12Z"
      fill="currentColor"
    />
    <path
      d="M10.001 12C11.1055 12 12.001 11.1046 12.001 10C12.001 8.89543 11.1055 8 10.001 8C8.89641 8 8.00098 8.89543 8.00098 10C8.00098 11.1046 8.89641 12 10.001 12Z"
      fill="currentColor"
      fillOpacity="0.4"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.30028 3.61981C2.54544 3.32424 2.94889 3.22268 3.31509 3.33827L5.74341 4.10482C6.30313 4.28151 6.89396 3.9404 7.02081 3.36732L7.57179 0.878008C7.65484 0.50278 7.94491 0.203982 8.32386 0.139998C8.86912 0.0479331 9.42937 0 10.0008 0C10.5707 0 11.1295 0.0476709 11.6733 0.139243C12.0524 0.203079 12.3427 0.501951 12.4258 0.877331L12.9769 3.36732C13.1038 3.9404 13.6946 4.28151 14.2543 4.10482L16.6858 3.33729C17.0519 3.22171 17.4553 3.32324 17.7005 3.61873C18.4122 4.47655 18.9833 5.45525 19.3785 6.51946C19.5121 6.87942 19.3983 7.27962 19.1151 7.53894L17.2324 9.26297C16.7995 9.65936 16.7995 10.3416 17.2324 10.738L19.1148 12.4618C19.3981 12.7211 19.5119 13.1213 19.3782 13.4813C18.9829 14.5456 18.4117 15.5243 17.6998 16.3821C17.4546 16.6775 17.0512 16.779 16.6851 16.6635L14.2543 15.8961C13.6946 15.7194 13.1038 16.0606 12.9769 16.6336L12.426 19.1226C12.3429 19.498 12.0527 19.7969 11.6736 19.8607C11.1296 19.9523 10.5708 20 10.0008 20C9.42929 20 8.86895 19.9521 8.32361 19.86C7.94468 19.796 7.65462 19.4972 7.57157 19.122L7.02081 16.6336C6.89396 16.0606 6.30313 15.7194 5.74341 15.8961L3.31572 16.6625C2.94956 16.7781 2.54614 16.6765 2.30097 16.381C1.58885 15.5227 1.01752 14.5433 0.622386 13.4784C0.488841 13.1185 0.602673 12.7184 0.885803 12.4591L2.76535 10.738C3.19823 10.3416 3.19823 9.65936 2.76535 9.26297L0.885536 7.54161C0.602428 7.28237 0.488589 6.88231 0.622092 6.5224C1.01711 5.4575 1.5883 4.47816 2.30028 3.61981ZM2.77544 6.56037C2.95795 6.17785 3.17012 5.8118 3.40911 5.46523L5.14135 6.01205C6.82052 6.54212 8.59301 5.51878 8.97355 3.79954L9.36639 2.02469C9.57541 2.00835 9.78697 2 10.0008 2C10.2133 2 10.4236 2.00824 10.6313 2.02438L11.0242 3.79954C11.4047 5.51877 13.1772 6.54212 14.8564 6.01205L16.5918 5.46422C16.8306 5.81033 17.0426 6.17588 17.225 6.55788L15.8817 7.78796C14.5831 8.97713 14.5831 11.0238 15.8817 12.213L17.2247 13.4428C17.0422 13.8248 16.8301 14.1904 16.5913 14.5366L14.8564 13.9889C13.1772 13.4588 11.4047 14.4822 11.0242 16.2014L10.6315 17.9756C10.4237 17.9918 10.2134 18 10.0008 18C9.7869 18 9.57526 17.9916 9.36617 17.9753L8.97355 16.2014C8.59301 14.4822 6.82053 13.4588 5.14135 13.9889L3.40965 14.5356C3.17058 14.189 2.95833 13.8229 2.77576 13.4403L4.11603 12.213C5.41467 11.0238 5.41467 8.97713 4.11603 7.78796L2.77544 6.56037Z"
      fill="currentColor"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.30028 3.61981C2.54544 3.32424 2.94889 3.22268 3.31509 3.33827L5.74341 4.10482C6.30313 4.28151 6.89396 3.9404 7.02081 3.36732L7.57179 0.878008C7.65484 0.50278 7.94491 0.203982 8.32386 0.139998C8.86912 0.0479331 9.42937 0 10.0008 0C10.5707 0 11.1295 0.0476709 11.6733 0.139243C12.0524 0.203079 12.3427 0.501951 12.4258 0.877331L12.9769 3.36732C13.1038 3.9404 13.6946 4.28151 14.2543 4.10482L16.6858 3.33729C17.0519 3.22171 17.4553 3.32324 17.7005 3.61873C18.4122 4.47655 18.9833 5.45525 19.3785 6.51946C19.5121 6.87942 19.3983 7.27962 19.1151 7.53894L17.2324 9.26297C16.7995 9.65936 16.7995 10.3416 17.2324 10.738L19.1148 12.4618C19.3981 12.7211 19.5119 13.1213 19.3782 13.4813C18.9829 14.5456 18.4117 15.5243 17.6998 16.3821C17.4546 16.6775 17.0512 16.779 16.6851 16.6635L14.2543 15.8961C13.6946 15.7194 13.1038 16.0606 12.9769 16.6336L12.426 19.1226C12.3429 19.498 12.0527 19.7969 11.6736 19.8607C11.1296 19.9523 10.5708 20 10.0008 20C9.42929 20 8.86895 19.9521 8.32361 19.86C7.94468 19.796 7.65462 19.4972 7.57157 19.122L7.02081 16.6336C6.89396 16.0606 6.30313 15.7194 5.74341 15.8961L3.31572 16.6625C2.94956 16.7781 2.54614 16.6765 2.30097 16.381C1.58885 15.5227 1.01752 14.5433 0.622386 13.4784C0.488841 13.1185 0.602673 12.7184 0.885803 12.4591L2.76535 10.738C3.19823 10.3416 3.19823 9.65936 2.76535 9.26297L0.885536 7.54161C0.602428 7.28237 0.488589 6.88231 0.622092 6.5224C1.01711 5.4575 1.5883 4.47816 2.30028 3.61981ZM2.77544 6.56037C2.95795 6.17785 3.17012 5.8118 3.40911 5.46523L5.14135 6.01205C6.82052 6.54212 8.59301 5.51878 8.97355 3.79954L9.36639 2.02469C9.57541 2.00835 9.78697 2 10.0008 2C10.2133 2 10.4236 2.00824 10.6313 2.02438L11.0242 3.79954C11.4047 5.51877 13.1772 6.54212 14.8564 6.01205L16.5918 5.46422C16.8306 5.81033 17.0426 6.17588 17.225 6.55788L15.8817 7.78796C14.5831 8.97713 14.5831 11.0238 15.8817 12.213L17.2247 13.4428C17.0422 13.8248 16.8301 14.1904 16.5913 14.5366L14.8564 13.9889C13.1772 13.4588 11.4047 14.4822 11.0242 16.2014L10.6315 17.9756C10.4237 17.9918 10.2134 18 10.0008 18C9.7869 18 9.57526 17.9916 9.36617 17.9753L8.97355 16.2014C8.59301 14.4822 6.82053 13.4588 5.14135 13.9889L3.40965 14.5356C3.17058 14.189 2.95833 13.8229 2.77576 13.4403L4.11603 12.213C5.41467 11.0238 5.41467 8.97713 4.11603 7.78796L2.77544 6.56037Z"
      fill="currentColor"
      fillOpacity="0.4"
    />
  </svg>
);

export const Clock = (props: React.SVGProps<SVGSVGElement>) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M20 37C29.3888 37 37 29.3888 37 20C37 10.6112 29.3888 3 20 3C10.6112 3 3 10.6112 3 20C3 29.3888 10.6112 37 20 37ZM21 9.5C21 8.67157 20.3284 8 19.5 8C18.6716 8 18 8.67157 18 9.5V20.5C18 20.8978 18.158 21.2794 18.4393 21.5607C18.7206 21.842 19.1022 22 19.5 22H27.5C28.3284 22 29 21.3284 29 20.5C29 19.6716 28.3284 19 27.5 19H21V9.5Z"
      fill="rgb(73,66,143)"
      fillOpacity="1"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21 9.5C21 8.67157 20.3284 8 19.5 8C18.6716 8 18 8.67157 18 9.5V20.5C18 20.8978 18.158 21.2794 18.4393 21.5607C18.7206 21.842 19.1022 22 19.5 22H27.5C28.3284 22 29 21.3284 29 20.5C29 19.6716 28.3284 19 27.5 19H21V9.5Z"
      fill="rgb(184,178,250)"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21 9.5C21 8.67157 20.3284 8 19.5 8C18.6716 8 18 8.67157 18 9.5V20.5C18 20.8978 18.158 21.2794 18.4393 21.5607C18.7206 21.842 19.1022 22 19.5 22H27.5C28.3284 22 29 21.3284 29 20.5C29 19.6716 28.3284 19 27.5 19H21V9.5Z"
      fill="rgb(184,178,250)"
      fillOpacity="0.4"
    />
  </svg>
);

export const InProgress = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <g id="40/in-progress">
      <g id="Ellipse 4962">
        <circle cx="20" cy="20" r="17" fill="rgb(73,66,143)" fillOpacity="1" />
      </g>
      <g id="Union">
        <path
          d="M20 9.01953C19.772 9.01953 19.5454 9.0265 19.3204 9.04027C18.4935 9.09086 17.8642 9.80219 17.9148 10.6291C17.9654 11.456 18.6768 12.0853 19.5036 12.0347C19.6676 12.0246 19.8331 12.0195 20 12.0195C21.048 12.0195 22.0858 12.226 23.054 12.627C23.9745 13.0083 24.8151 13.5584 25.5325 14.2486C25.5697 14.2843 25.6066 14.3205 25.643 14.357C25.6503 14.3643 25.6576 14.3716 25.6649 14.3789C25.6988 14.413 25.7323 14.4475 25.7656 14.4822C26.4491 15.1964 26.9943 16.0318 27.373 16.946C27.774 17.9142 27.9805 18.952 27.9805 20C27.9805 20.1669 27.9754 20.3324 27.9653 20.4964C27.9147 21.3232 28.544 22.0346 29.3709 22.0852C30.1978 22.1358 30.9091 21.5065 30.9597 20.6796C30.9735 20.4546 30.9805 20.228 30.9805 20C30.9805 19.772 30.9735 19.5454 30.9597 19.3204C30.959 19.3088 30.9582 19.2972 30.9572 19.2857C30.8791 18.0881 30.6051 16.9097 30.1446 15.798C29.6824 14.6819 29.0397 13.6513 28.2439 12.7468C28.2394 12.7416 28.2349 12.7364 28.2303 12.7312C28.127 12.6144 28.0213 12.4997 27.9132 12.3874C27.8641 12.3363 27.8145 12.2857 27.7644 12.2356C27.7543 12.2256 27.7443 12.2156 27.7342 12.2056C27.6877 12.1594 27.6407 12.1136 27.5933 12.0683C27.4872 11.9666 27.379 11.8671 27.2688 11.7697C27.2636 11.7651 27.2585 11.7606 27.2533 11.7562C26.3487 10.9603 25.3181 10.3177 24.202 9.85537C23.0903 9.39486 21.9119 9.12086 20.7143 9.04279C20.7028 9.04182 20.6912 9.04098 20.6796 9.04027C20.4546 9.0265 20.228 9.01953 20 9.01953Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M20 9.01953C19.772 9.01953 19.5454 9.0265 19.3204 9.04027C18.4935 9.09086 17.8642 9.80219 17.9148 10.6291C17.9654 11.456 18.6768 12.0853 19.5036 12.0347C19.6676 12.0246 19.8331 12.0195 20 12.0195C21.048 12.0195 22.0858 12.226 23.054 12.627C23.9745 13.0083 24.8151 13.5584 25.5325 14.2486C25.5697 14.2843 25.6066 14.3205 25.643 14.357C25.6503 14.3643 25.6576 14.3716 25.6649 14.3789C25.6988 14.413 25.7323 14.4475 25.7656 14.4822C26.4491 15.1964 26.9943 16.0318 27.373 16.946C27.774 17.9142 27.9805 18.952 27.9805 20C27.9805 20.1669 27.9754 20.3324 27.9653 20.4964C27.9147 21.3232 28.544 22.0346 29.3709 22.0852C30.1978 22.1358 30.9091 21.5065 30.9597 20.6796C30.9735 20.4546 30.9805 20.228 30.9805 20C30.9805 19.772 30.9735 19.5454 30.9597 19.3204C30.959 19.3088 30.9582 19.2972 30.9572 19.2857C30.8791 18.0881 30.6051 16.9097 30.1446 15.798C29.6824 14.6819 29.0397 13.6513 28.2439 12.7468C28.2394 12.7416 28.2349 12.7364 28.2303 12.7312C28.127 12.6144 28.0213 12.4997 27.9132 12.3874C27.8641 12.3363 27.8145 12.2857 27.7644 12.2356C27.7543 12.2256 27.7443 12.2156 27.7342 12.2056C27.6877 12.1594 27.6407 12.1136 27.5933 12.0683C27.4872 11.9666 27.379 11.8671 27.2688 11.7697C27.2636 11.7651 27.2585 11.7606 27.2533 11.7562C26.3487 10.9603 25.3181 10.3177 24.202 9.85537C23.0903 9.39486 21.9119 9.12086 20.7143 9.04279C20.7028 9.04182 20.6912 9.04098 20.6796 9.04027C20.4546 9.0265 20.228 9.01953 20 9.01953Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
        <path
          d="M14.7179 14.0176C15.3386 13.469 15.3971 12.5211 14.8485 11.9003C14.2999 11.2796 13.352 11.2211 12.7312 11.7697C12.3913 12.0701 12.0701 12.3913 11.7697 12.7312C11.2211 13.352 11.2796 14.2999 11.9003 14.8485C12.5211 15.3971 13.469 15.3386 14.0176 14.7179C14.2364 14.4703 14.4703 14.2364 14.7179 14.0176Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M14.7179 14.0176C15.3386 13.469 15.3971 12.5211 14.8485 11.9003C14.2999 11.2796 13.352 11.2211 12.7312 11.7697C12.3913 12.0701 12.0701 12.3913 11.7697 12.7312C11.2211 13.352 11.2796 14.2999 11.9003 14.8485C12.5211 15.3971 13.469 15.3386 14.0176 14.7179C14.2364 14.4703 14.4703 14.2364 14.7179 14.0176Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
        <path
          d="M12.0347 19.5036C12.0853 18.6768 11.456 17.9654 10.6291 17.9148C9.80219 17.8642 9.09086 18.4935 9.04027 19.3204C9.0265 19.5454 9.01953 19.772 9.01953 20C9.01953 20.228 9.0265 20.4546 9.04027 20.6796C9.09086 21.5065 9.80219 22.1358 10.6291 22.0852C11.456 22.0346 12.0853 21.3232 12.0347 20.4964C12.0246 20.3324 12.0195 20.1669 12.0195 20C12.0195 19.8331 12.0246 19.6676 12.0347 19.5036Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M12.0347 19.5036C12.0853 18.6768 11.456 17.9654 10.6291 17.9148C9.80219 17.8642 9.09086 18.4935 9.04027 19.3204C9.0265 19.5454 9.01953 19.772 9.01953 20C9.01953 20.228 9.0265 20.4546 9.04027 20.6796C9.09086 21.5065 9.80219 22.1358 10.6291 22.0852C11.456 22.0346 12.0853 21.3232 12.0347 20.4964C12.0246 20.3324 12.0195 20.1669 12.0195 20C12.0195 19.8331 12.0246 19.6676 12.0347 19.5036Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
        <path
          d="M28.2303 27.2688C28.7789 26.648 28.7204 25.7001 28.0997 25.1515C27.4789 24.6029 26.531 24.6614 25.9824 25.2821C25.7636 25.5297 25.5297 25.7636 25.2821 25.9824C24.6614 26.531 24.6029 27.4789 25.1515 28.0997C25.7001 28.7204 26.648 28.7789 27.2688 28.2303C27.6087 27.9299 27.9299 27.6087 28.2303 27.2688Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M28.2303 27.2688C28.7789 26.648 28.7204 25.7001 28.0997 25.1515C27.4789 24.6029 26.531 24.6614 25.9824 25.2821C25.7636 25.5297 25.5297 25.7636 25.2821 25.9824C24.6614 26.531 24.6029 27.4789 25.1515 28.0997C25.7001 28.7204 26.648 28.7789 27.2688 28.2303C27.6087 27.9299 27.9299 27.6087 28.2303 27.2688Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
        <path
          d="M14.0176 25.2821C13.469 24.6614 12.5211 24.6029 11.9003 25.1515C11.2796 25.7001 11.2211 26.648 11.7697 27.2688C12.0701 27.6087 12.3913 27.9299 12.7312 28.2303C13.352 28.7789 14.2999 28.7204 14.8485 28.0997C15.3971 27.4789 15.3386 26.531 14.7179 25.9824C14.4703 25.7636 14.2364 25.5297 14.0176 25.2821Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M14.0176 25.2821C13.469 24.6614 12.5211 24.6029 11.9003 25.1515C11.2796 25.7001 11.2211 26.648 11.7697 27.2688C12.0701 27.6087 12.3913 27.9299 12.7312 28.2303C13.352 28.7789 14.2999 28.7204 14.8485 28.0997C15.3971 27.4789 15.3386 26.531 14.7179 25.9824C14.4703 25.7636 14.2364 25.5297 14.0176 25.2821Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
        <path
          d="M19.5036 27.9653C18.6768 27.9147 17.9654 28.544 17.9148 29.3709C17.8642 30.1978 18.4935 30.9091 19.3204 30.9597C19.5454 30.9735 19.772 30.9805 20 30.9805C20.228 30.9805 20.4546 30.9735 20.6796 30.9597C21.5065 30.9091 22.1358 30.1978 22.0852 29.3709C22.0346 28.544 21.3232 27.9147 20.4964 27.9653C20.3324 27.9754 20.1669 27.9805 20 27.9805C19.8331 27.9805 19.6676 27.9754 19.5036 27.9653Z"
          fill="rgb(240,232,253)"
        />
        <path
          d="M19.5036 27.9653C18.6768 27.9147 17.9654 28.544 17.9148 29.3709C17.8642 30.1978 18.4935 30.9091 19.3204 30.9597C19.5454 30.9735 19.772 30.9805 20 30.9805C20.228 30.9805 20.4546 30.9735 20.6796 30.9597C21.5065 30.9091 22.1358 30.1978 22.0852 29.3709C22.0346 28.544 21.3232 27.9147 20.4964 27.9653C20.3324 27.9754 20.1669 27.9805 20 27.9805C19.8331 27.9805 19.6676 27.9754 19.5036 27.9653Z"
          fill="rgb(240,232,253)"
          fillOpacity="0.4"
        />
      </g>
    </g>
  </svg>
);

export const SuccessCheck = (props: React.SVGProps<SVGSVGElement>) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M20 37C29.3888 37 37 29.3888 37 20C37 10.6112 29.3888 3 20 3C10.6112 3 3 10.6112 3 20C3 29.3888 10.6112 37 20 37ZM28.615 17.5528C29.2008 16.9671 29.2008 16.0173 28.615 15.4315C28.0292 14.8457 27.0795 14.8457 26.4937 15.4315L18.538 23.3872L13.506 18.3553C12.9202 17.7695 11.9704 17.7695 11.3846 18.3553C10.7989 18.9411 10.7989 19.8908 11.3847 20.4766L17.8309 26.9227C18.2214 27.3133 18.8546 27.3133 19.2451 26.9227L28.615 17.5528Z"
      fill="url(#paint0_linear_35_85639)"
    />
    <defs>
      <linearGradient
        id="paint0_linear_35_85639"
        x1="18"
        y1="37"
        x2="18"
        y2="2.52336"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#AAF2F0" />
        <stop offset="0.5" stopColor="#9FAEFF" />
        <stop offset="1" stopColor="#A273FF" />
      </linearGradient>
    </defs>
  </svg>
);

export const SuccessCheckSolidColor = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="14" height="14" viewBox="2 3 14 8" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <g id="16/check">
      <path
        id="Vector 4465 (Stroke)"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M14.0317 3.62002C14.3246 3.91289 14.3246 4.38776 14.0318 4.68068L7.82414 10.8893C7.68349 11.0299 7.49272 11.109 7.2938 11.109C7.09488 11.109 6.9041 11.03 6.76344 10.8893L3.46967 7.59562C3.17678 7.30272 3.17677 6.82785 3.46967 6.53496C3.76256 6.24206 4.23743 6.24205 4.53033 6.53495L7.29372 9.29829L12.971 3.6201C13.2639 3.32719 13.7388 3.32715 14.0317 3.62002Z"
        fill="currentColor"
      />
    </g>
  </svg>
);

export const FailedX = (props: React.SVGProps<SVGSVGElement>) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M28.8787 4.87868C28.3161 4.31607 27.553 4 26.7574 4H13.2426C12.447 4 11.6839 4.31607 11.1213 4.87868L4.87868 11.1213C4.31607 11.6839 4 12.447 4 13.2426V26.7574C4 27.553 4.31607 28.3161 4.87868 28.8787L11.1213 35.1213C11.6839 35.6839 12.447 36 13.2426 36H26.7574C27.553 36 28.3161 35.6839 28.8787 35.1213L35.1213 28.8787C35.6839 28.3161 36 27.553 36 26.7574V13.2426C36 12.447 35.6839 11.6839 35.1213 11.1213L28.8787 4.87868ZM26.5255 13.4745C25.9397 12.8887 24.99 12.8887 24.4042 13.4745L20 17.8787L15.5958 13.4745C15.01 12.8887 14.0603 12.8887 13.4745 13.4745C12.8887 14.0603 12.8887 15.01 13.4745 15.5958L17.8787 20L13.4745 24.4042C12.8887 24.99 12.8887 25.9397 13.4745 26.5255C14.0603 27.1113 15.01 27.1113 15.5958 26.5255L20 22.1213L24.4042 26.5255C24.99 27.1113 25.9397 27.1113 26.5255 26.5255C27.1113 25.9397 27.1113 24.99 26.5255 24.4042L22.1213 20L26.5255 15.5958C27.1113 15.01 27.1113 14.0603 26.5255 13.4745Z"
      fill="url(#paint0_linear_2359_120285)"
    />
    <defs>
      <linearGradient
        id="paint0_linear_2359_120285"
        x1="4"
        y1="36"
        x2="4"
        y2="4"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#FFD2B9" />
        <stop offset="1" stopColor="#FF6D6D" />
        <stop offset="1" stopColor="#FF6D6D" />
        <stop offset="1" stopColor="#FF6D6D" />
      </linearGradient>
    </defs>
  </svg>
);

export const Cancel = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="32" height="32" viewBox="0 0 32 32" fill="none" {...props}>
    <defs>
      <linearGradient
        id="paint0_linear_4142_335179"
        x1="16"
        y1="0"
        x2="16"
        y2="32"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#A278FF" />
        <stop offset="1" stopColor="#A9EDF1" />
      </linearGradient>
    </defs>
    <path
      id="cancel"
      d="M16 0C7.1764 0 0 7.1764 0 16C0 24.8236 7.1764 32 16 32C24.8236 32 32 24.8236 32 16C32 7.1764 24.8236 0 16 0ZM16 27.5204C9.6484 27.5204 4.4796 22.3516 4.4796 16C4.4796 13.6922 5.15148 11.4876 6.42336 9.5952L22.4078 25.5796C20.5156 26.8515 18.3126 27.5234 16.003 27.5234L16 27.5204ZM25.5764 22.4048L9.5952 6.4236C11.4874 5.15172 13.6904 4.47984 16 4.47984C22.3516 4.47984 27.5204 9.64864 27.5204 16.0002C27.5204 18.308 26.8483 20.5124 25.5764 22.4048Z"
      fill="url(#paint0_linear_4142_335179)"
    />
  </svg>
);

export const Copy = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="16" height="16" viewBox="0 0 13 12" {...props}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M4.72314 0.00976562C4.30893 0.00976562 3.97314 0.345552 3.97314 0.759766V2.99103H1.73633C1.32211 2.99103 0.986328 3.32681 0.986328 3.74103V11.2527C0.986328 11.667 1.32211 12.0027 1.73633 12.0027H9.24805C9.66226 12.0027 9.99805 11.667 9.99805 11.2527V9.01591H12.2293C12.6435 9.01591 12.9793 8.68012 12.9793 8.26591V0.759766C12.9793 0.345552 12.6435 0.00976562 12.2293 0.00976562H4.72314ZM8.49805 9.01591H4.72314C4.30893 9.01591 3.97314 8.68012 3.97314 8.26591V4.49103H2.48633V10.5027H8.49805V9.01591ZM5.47314 7.51591V1.50977H11.4793V7.51591H5.47314Z"
      fill="white"
    />
  </svg>
);

export const Zap = ({
  background = true,
  ...props
}: React.SVGProps<SVGSVGElement> & { background?: boolean }) => (
  <svg width="34" height="34" viewBox="0 0 34 34" {...props}>
    {background && (
      <g id="Ellipse 4962">
        <circle cx="17" cy="17" r="17" fill="rgb(73,66,143)" fillOpacity="1" />
      </g>
    )}
    <path
      d="M21.8342 16.9599L14.3348 25.7815C14.2765 25.8505 14.2056 25.9056 14.1266 25.9432C14.0476 25.9809 13.9623 26.0002 13.8761 26C13.7756 25.9999 13.6767 25.9736 13.5876 25.9232C13.4986 25.8728 13.422 25.7998 13.3644 25.7104C13.3069 25.6211 13.27 25.518 13.2569 25.4099C13.2438 25.3018 13.2549 25.1918 13.2892 25.0893L15.5391 18.366L12.5012 17.6989C12.394 17.6754 12.2943 17.6217 12.2122 17.5433C12.1301 17.4649 12.0684 17.3644 12.0332 17.252C11.998 17.1396 11.9906 17.0191 12.0118 16.9026C12.0329 16.7861 12.0819 16.6776 12.1537 16.5881L19.6531 7.23245C19.749 7.11306 19.8804 7.03389 20.0245 7.00866C20.1685 6.98343 20.3162 7.01373 20.4418 7.09431C20.5675 7.17489 20.6632 7.30067 20.7124 7.44985C20.7616 7.59902 20.7611 7.76218 20.7111 7.91103L18.4326 14.7193L21.5729 15.8559C21.672 15.8918 21.7611 15.954 21.8323 16.037C21.9035 16.1199 21.9544 16.2209 21.9803 16.3307C22.0063 16.4405 22.0066 16.5556 21.981 16.6655C21.9555 16.7754 21.905 16.8766 21.8342 16.9599Z"
      fill="rgb(240,232,253)"
    />
  </svg>
);
